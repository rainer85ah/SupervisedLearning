"""
Supervised learning: 1-Classification*, 2-Regression.
LDA is a linear transformation techniques: LDA is a supervised.

Linear Discriminant Analysis (LDA):
A classifier with a linear decision boundary, generated by fitting class conditional densities to the data and
using Bayes rule. The model fits a Gaussian density to each class, assuming that all classes share the same
covariance matrix. The fitted model can also be used to reduce the dimensionality of the input by projecting it
to the most discriminative directions.
"""
import numpy as np
from sklearn.externals import joblib
from sklearn import datasets, metrics
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.cross_validation import train_test_split

cancer = datasets.load_breast_cancer()
data = cancer.data
labels = cancer.target

data = np.asarray(data, dtype='float32')
labels = np.asarray(labels, dtype='int32')
trainData, testData, trainLabels, testLabels = train_test_split(data, labels, train_size=0.8, test_size=0.2)

print('LDA Learning... Fitting... ')
lda_clf = LinearDiscriminantAnalysis(solver='svd', shrinkage=None, priors=None, n_components=2,
                                     store_covariance=True, tol=0.0001)
lda_clf.fit(X=trainData, y=trainLabels)

print('LDA Predicting... ')
predicted = lda_clf.predict(X=testData)

print("Results: \n %s" % metrics.classification_report(testLabels, predicted))
matrix = metrics.confusion_matrix(testLabels, predicted)
print("Confusion Matrix: \n %s" % matrix)
print("\nMean Accuracy: %.4f " % lda_clf.score(X=testData, y=testLabels))

print("LDA Saving in ... /Output/LDA_model.pkl")
joblib.dump(lda_clf, '/home/rainer85ah/PycharmProjects/DiagnosticCancerSolution/Output/LDA_model.pkl')
